Started by user Methawadee Chumok
Obtained Jenkinsfile from git https://github.com/yn-04/cicddev.git
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/jenkins_home/workspace/piep
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
Selected Git installation does not exist. Using Default
The recommended git tool is: NONE
No credentials specified
 > git rev-parse --resolve-git-dir /var/jenkins_home/workspace/piep/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/yn-04/cicddev.git # timeout=10
Fetching upstream changes from https://github.com/yn-04/cicddev.git
 > git --version # timeout=10
 > git --version # 'git version 2.39.5'
 > git fetch --tags --force --progress -- https://github.com/yn-04/cicddev.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision 7ca9d306cb8c690cc1a20d239d11c44374d553b5 (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 7ca9d306cb8c690cc1a20d239d11c44374d553b5 # timeout=10
Commit message: "Update Jenkinsfile"
 > git rev-list --no-walk 7ca9d306cb8c690cc1a20d239d11c44374d553b5 # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withCredentials
Masking supported pattern matches of $NETLIFY_AUTH_TOKEN
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Checkout)
[Pipeline] checkout
Selected Git installation does not exist. Using Default
The recommended git tool is: NONE
No credentials specified
 > git rev-parse --resolve-git-dir /var/jenkins_home/workspace/piep/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/yn-04/cicddev.git # timeout=10
Fetching upstream changes from https://github.com/yn-04/cicddev.git
 > git --version # timeout=10
 > git --version # 'git version 2.39.5'
 > git fetch --tags --force --progress -- https://github.com/yn-04/cicddev.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision 7ca9d306cb8c690cc1a20d239d11c44374d553b5 (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 7ca9d306cb8c690cc1a20d239d11c44374d553b5 # timeout=10
Commit message: "Update Jenkinsfile"
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build)
[Pipeline] getContext
[Pipeline] isUnix
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ docker inspect -f . node:18-alpine
.
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] withDockerContainer
Jenkins seems to be running inside container 944ca53c03e977261cd384f38a40a1c52581b35d232ac51496f0dbc7584cbaea
but /var/jenkins_home/workspace/piep could not be found among []
but /var/jenkins_home/workspace/piep@tmp could not be found among []
$ docker run -t -d -u 1000:1000 -w /var/jenkins_home/workspace/piep -v /var/jenkins_home/workspace/piep:/var/jenkins_home/workspace/piep:rw,z -v /var/jenkins_home/workspace/piep@tmp:/var/jenkins_home/workspace/piep@tmp:rw,z -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** node:18-alpine cat
$ docker top 6808f2b0a5b64836f32414b66c828d0a20faba7a4e902dd76a3dacdafcba1f05 -eo pid,comm
[Pipeline] {
[Pipeline] echo
🔧 Checking required files...
[Pipeline] sh
+ test -f public/index.html
+ test -f functions/script.js
+ test -f netlify/functions/script.js
+ echo '✅ Build check passed.'
✅ Build check passed.
[Pipeline] }
$ docker stop --time=1 6808f2b0a5b64836f32414b66c828d0a20faba7a4e902dd76a3dacdafcba1f05
$ docker rm -f --volumes 6808f2b0a5b64836f32414b66c828d0a20faba7a4e902dd76a3dacdafcba1f05
[Pipeline] // withDockerContainer
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Test)
[Pipeline] getContext
[Pipeline] isUnix
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ docker inspect -f . node:18-alpine
.
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] withDockerContainer
Jenkins seems to be running inside container 944ca53c03e977261cd384f38a40a1c52581b35d232ac51496f0dbc7584cbaea
but /var/jenkins_home/workspace/piep could not be found among []
but /var/jenkins_home/workspace/piep@tmp could not be found among []
$ docker run -t -d -u 1000:1000 -w /var/jenkins_home/workspace/piep -v /var/jenkins_home/workspace/piep:/var/jenkins_home/workspace/piep:rw,z -v /var/jenkins_home/workspace/piep@tmp:/var/jenkins_home/workspace/piep@tmp:rw,z -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** node:18-alpine cat
$ docker top 4eab74dd89148f7eee2f62e3434268e34ac5fd28d23da46c49d5171b2c2bdc24 -eo pid,comm
[Pipeline] {
[Pipeline] echo
🧪 Testing Random Question Generator load...
[Pipeline] sh
+ npm install uuid

up to date, audited 2 packages in 1s

found 0 vulnerabilities
+ node -e 'require('"'"'./functions/script.js'"'"'); console.log('"'"'✅ Script function loaded successfully'"'"')'
✅ Script function loaded successfully
+ node -e 'require('"'"'./netlify/functions/script.js'"'"'); console.log('"'"'✅ Script function loaded successfully'"'"')'
✅ Script function loaded successfully
[Pipeline] }
$ docker stop --time=1 4eab74dd89148f7eee2f62e3434268e34ac5fd28d23da46c49d5171b2c2bdc24
$ docker rm -f --volumes 4eab74dd89148f7eee2f62e3434268e34ac5fd28d23da46c49d5171b2c2bdc24
[Pipeline] // withDockerContainer
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploy)
[Pipeline] getContext
[Pipeline] isUnix
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ docker inspect -f . node:18-alpine
.
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] withDockerContainer
Jenkins seems to be running inside container 944ca53c03e977261cd384f38a40a1c52581b35d232ac51496f0dbc7584cbaea
but /var/jenkins_home/workspace/piep could not be found among []
but /var/jenkins_home/workspace/piep@tmp could not be found among []
$ docker run -t -d -u 1000:1000 -w /var/jenkins_home/workspace/piep -v /var/jenkins_home/workspace/piep:/var/jenkins_home/workspace/piep:rw,z -v /var/jenkins_home/workspace/piep@tmp:/var/jenkins_home/workspace/piep@tmp:rw,z -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** node:18-alpine cat
$ docker top fd140aa864363f4b9edc8ee16d87a47b3b5fe724d23afd718037282cb30b5e25 -eo pid,comm
[Pipeline] {
[Pipeline] echo
🚀 Deploying to Netlify...
[Pipeline] sh
+ npm install netlify-cli
npm warn deprecated rimraf@3.0.2: Rimraf versions prior to v4 are no longer supported
npm warn deprecated npmlog@5.0.1: This package is no longer supported.
npm warn deprecated gauge@3.0.2: This package is no longer supported.
npm warn deprecated are-we-there-yet@2.0.0: This package is no longer supported.
npm warn deprecated glob@8.1.0: Glob versions prior to v9 are no longer supported

added 1596 packages, and audited 1601 packages in 35s

250 packages are looking for funding
  run `npm fund` for details

8 moderate severity vulnerabilities

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
+ npx netlify deploy '--auth=****' '--site=caaecc4d-9158-42c5-8e94-609a10f489b3' '--dir=public' --prod
Deploy path:        /var/jenkins_home/workspace/piep/public
Functions path:     /var/jenkins_home/workspace/piep/netlify/functions
Configuration path: /var/jenkins_home/workspace/piep/netlify.toml
Deploying to main site URL...
[33m⠋[39m Uploading blobs to deploy store...

​
Netlify Build                                                 
────────────────────────────────────────────────────────────────
​
❯ Version
  @netlify/build 30.0.6
​
❯ Flags
  auth: ****
  deployId: 67e6e76761642317eecb8433
  dir: public
  open: false
  prod: true
  prodIfUnlocked: false
  site: caaecc4d-9158-42c5-8e94-609a10f489b3
  skipFunctionsCache: false
​
❯ Current directory
  /var/jenkins_home/workspace/piep
​
❯ Config file
  /var/jenkins_home/workspace/piep/netlify.toml
​
❯ Context
  dev
[33m⠙[39m Finished uploading blobs to deploy store
[33m⠋[39m Hashing files...
[33m⠋[39m Looking for a functions cache...
[33m⠙[39m No cached functions were found
[33m⠙[39m Finished hashing 2 files and 1 functions
[33m⠋[39m CDN diffing files...
[33m⠙[39m CDN requesting 0 files and 0 functions
[33m⠋[39m Uploading 0 files
[33m⠙[39m Finished uploading 0 assets
[33m⠋[39m Waiting for deploy to go live...
[33m⠙[39m Deploy is live!

Build logs:         https://app.netlify.com/sites/gregarious-choux-27d34f/deploys/67e6e76761642317eecb8433
Function logs:      https://app.netlify.com/sites/gregarious-choux-27d34f/logs/functions
Edge function Logs: https://app.netlify.com/sites/gregarious-choux-27d34f/logs/edge-functions
Unique deploy URL:  https://67e6e76761642317eecb8433--gregarious-choux-27d34f.netlify.app
Website URL:        https://gregarious-choux-27d34f.netlify.app
[Pipeline] }
$ docker stop --time=1 fd140aa864363f4b9edc8ee16d87a47b3b5fe724d23afd718037282cb30b5e25
$ docker rm -f --volumes fd140aa864363f4b9edc8ee16d87a47b3b5fe724d23afd718037282cb30b5e25
[Pipeline] // withDockerContainer
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Post Deploy)
[Pipeline] echo
✅ Deployment complete! Random Question Generator.
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] echo
🎉 CI/CD pipeline finished successfully.
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
